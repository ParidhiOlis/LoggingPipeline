version: '3.8'

services:
  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  # # Milvus dependencies
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
    volumes:
      - etcd_data:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/minio_data
    command: minio server /minio_data

  # # Milvus
  milvus:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.2
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      MILVUS_GRPC_PORT: 19530
      MILVUS_HTTP_PORT: 19531
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "19531:19531"
    depends_on:
      - "etcd"
      - "minio"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3

  # FastAPI
  api:
    build:
      context: .
      target: dev   # switch to "prod" for production build
    image: fastapi-example:dev
    container_name: fastapi-api
    ports:
      - "8000:8000"
    # Mount code for hot-reload in dev
    volumes:
      - ./app:/app/app:rw
    environment:
      # add your env vars here or use an .env file
      PYTHONPATH: /app
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CUDA_VISIBLE_DEVICES: ""  # Disable CUDA
      TORCH_DEVICE: cpu 
    depends_on:
      - milvus
      - elasticsearch
    healthcheck:
      test: ["CMD-SHELL", "curl", "-fsS", "http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
    # Optional: ensure restarts on failure
    restart: unless-stopped
    
  db:
    image: postgres:16
    container_name: app-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: UTC
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      # Persistent data
      - pgdata:/var/lib/postgresql/data
      # Init scripts (run only on first init of an empty volume)
      - ./postgres/metadata_db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  es_data:
  etcd_data:
  minio_data:
  milvus_data:
  pgdata: